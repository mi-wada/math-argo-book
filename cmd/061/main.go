package main

import (
	"fmt"
)

func main() {
	// N
	var n int
	fmt.Scan(&n)

	// N=0 の時、必ずターンプレイヤーが負ける。なのでSecondが勝つ。
	// N=1 の時、必ずターンプレイヤーが負ける。なのでSecondが勝つ。
	// N=2 の時、必ずターンプレイヤーが勝つ。必ず負ける状態N=1で相手にターンを回せるため。なのでFirstが勝つ。
	// N=3 の時、必ずターンプレイヤーが負ける。N=2で相手のターンが来るため。なのでSecondが勝つ。
	// N=4 の時、必ずターンプレイヤーが勝つ。必ず負ける状態N=3で相手にターンを回せるため。なのでFirstが勝つ。
	// N=5 の時、必ずターンプレイヤーが勝つ。必ず負ける状態N=3で相手にターンを回せるため。なのでFirstが勝つ。
	// N=6 の時、必ずターンプレイヤーが勝つ。必ず負ける状態N=3で相手にターンを回せるため。なのでFirstが勝つ。
	// N=7 の時、必ずターンプレイヤーが負ける。N=4..6で相手のターンが来るため。なのでSecondが勝つ。
	// N=8 の時、必ずターンプレイヤーが勝つ。必ず負ける状態N=7で相手にターンを回せるため。なのでFirstが勝つ。
	// ...
	// N=14 の時、必ずターンプレイヤーが勝つ。必ず負ける状態N=7で相手にターンを回せるため。なのでFirstが勝つ。
	// N=15 の時、必ずターンプレイヤーが負ける。N=8..14で相手のターンが来るため。なのでSecondが勝つ。
	//
	// Nの時、N-1から切り上げ(N/2)まで遷移できる。
	// 以上より、1, 3, 7, ... つまりAn = 2*An-1+1, A0=1を満たすAnの時にSecondが勝つ。それ以外の場合Firstが勝つ。

	var second bool
	for i := 1; i <= n; i = i*2 + 1 {
		if i == n {
			second = true
		}
	}
	if second {
		fmt.Println("Second")
	} else {
		fmt.Println("First")
	}
}
